name: test
on: [push, pull_request]
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.12.x, 1.13.x]
        platform: [ubuntu-latest] # , macos-latest] #, windows-latest]
    runs-on: ${{ matrix.platform }}
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: off
    steps:
    - name: Linux prerequisites 
      if: matrix.platform == 'ubuntu-latest'
      run: sudo apt-get -y install build-essential libglu1-mesa-dev libpulse-dev libglib2.0-dev

    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.13.2
        host: linux
        target: desktop
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Get Qt binding for Go
      run: go get -v github.com/therecipe/qt/cmd/...

    - name: Generate Qt bindings
      run: $(go env GOPATH)/bin/qtsetup

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        path: ./src/github.com/${{ github.repository }}

    - name: Get dependencies
      run: |
        go get -v -t -d github.com/${{ github.repository }}/editor && \
        cd ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim && \
        $(go env GOPATH)/bin/qtmoc

    - name: Test
      run: go test github.com/${{ github.repository }}/editor
      
#  build:
#    name: Build
#    runs-on: ubuntu-latest
#    steps:
#
#    - name: Set up Go 1.13
#      uses: actions/setup-go@v1
#      with:
#        go-version: 1.13
#      id: go
#
#    - name: Check out code into the Go module directory
#      uses: actions/checkout@v2
#
#    - name: Get dependencies
#      run: |
#        go get -v -t -d ./...
#        if [ -f Gopkg.toml ]; then
#            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
#            dep ensure
#        fi
#
#    - name: Build
#      run: go build -v .
